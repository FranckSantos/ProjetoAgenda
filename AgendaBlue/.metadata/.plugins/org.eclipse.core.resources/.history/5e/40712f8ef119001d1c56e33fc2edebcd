package br.com.agenda.agenda.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.agenda.agenda.model.ContatoModel;
import br.com.agenda.agenda.repository.ContatoRepository;

@RestController
@RequestMapping("/contato")
public class AgendaController {
	
	private List<ContatoModel> listaContatos = new ArrayList<>();
	
	@Autowired
	private ContatoRepository contRepository;
	
	
//	@GetMapping("/")
//	public Contato contato() {
//		Contato contato = new Contato();
//		contato.setId(1L);
//		contato.setNome("Frank");
//		contato.setEmail("frank@gmail.com");
//		contato.setTelefone("995350334");
//		return contato;
//		
//	}
			
	@GetMapping("/{id}")
	public ContatoModel contato(@PathVariable("id") Long id) {
		System.out.println("O id Ã© " + id);
//		Contato contato = new Contato();
//		contato.setId(1L);
//		contato.setNome("Frank");
//		contato.setEmail("frank@gmail.com");
//		contato.setTelefone("995350334");
		
	//	Optional<ContatoModel> findContato = listaContatos.stream().filter(contato -> contato.getId() == id).findFirst();
		Optional<ContatoModel> findContato = this.contRepository.findById(id);
		
		if(findContato.isPresent()) {
			return findContato.get();
		}
		return null;
		
	}
	
	
	
	@PostMapping("/")
	public ContatoModel contato(@RequestBody ContatoModel contato) {
		return this.contRepository.save(contato);
//		listaContatos.add(contato);
//		return contato;
	}
	
	
	@GetMapping("/list")
	public List<ContatoModel> list() {
		return this.contRepository.findAll();
		//return listaContatos;
	}
	
	@GetMapping("/findByNome/{nome}")
	public List<ContatoModel> findByNome(@PathVariable("nome") String nome) {
		return this.contRepository.findByNome(nome);
		//return listaContatos;
	}
	
	
	@DeleteMapping("/remover/{id}")
	public void deleteById(@PathVariable("id") Long id) {
		if(contRepository.existsById(id)) {
			contRepository.deleteById(id);
		}
		contRepository.deleteById(id);
	
	}
	
	
	
	
	
	
	
	

}
